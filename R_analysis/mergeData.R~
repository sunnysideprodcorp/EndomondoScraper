library(plyr)
library(dplyr)
library(ggplot2)
library(stringr)
library(GGally)
library(data.table)
library(scales)

#READ IN AND FORMAT DATA


#get individual user name
setwd("D:/data/running")
mydata = fread("users_all.csv" )
names_to_delete <- c("X", "X_id")
mydata[ , c("X", "X_id") := NULL]

#first we extract numeric arrays from string arrays originally derived from csv
array_columns = c("sport","local_start_time", "distance", "duration", "speed_avg", "altitude_max", "altitude_min", "speed_max", "ascent", "descent", "title")
for(name in array_columns){
  mydata[[name]] = strsplit(gsub("^\\[|\\]$","",as.character(mydata[[name]])),", |\\[|\\]")
  mydata[[name]][[1]]= as.numeric(mydata[[name]][[1]]) 
}

name = "ascent"
mydata[, eval(paste0(name, ":=strsplit(gsub('^\\[|\\]$','',", name, "),',')"))]
mydata[ , eval(paste0(name, ":=as.numeric(", name, "[[1]])" ))]

#for now we'll consider only runners
#mydata = mydata[which(mydata$num_runs > 0), ]



array_columns = c("distance", "duration", "speed_avg", "altitude_max", "altitude_min", "speed_max", "ascent", "descent")
for(name in array_columns){
  mydata[[paste0( name, "_mean")]] = as.numeric(get_scalar(name, mean, mydata))
  mydata[[paste0(name, "_median")]] = as.numeric(get_scalar(name, median, mydata))
  mydata[[paste0(name, "_max")]] = as.numeric(get_scalar(name, max, mydata))
  mydata[[paste0(name, "_min")]] = as.numeric(get_scalar(name, min, mydata))
}


#mydata$time_min = get_scalar_time(mydata = mydata)
mydata$hour_start = get_scalar_time(to_return = 2, mydata = mydata)
mydata[ , hour_start:=get_scalar_time(to_return=2, )]
#mydata$time_max = get_scalar_time(to_return = 1, mydata = mydata)

#keep runner_data as a clean runner only data with no info about specific runs
runner_data = mydata


#now we'll add in individual info about runs
setwd("D:/data/running/runs_many_files")
names_to_delete = c("location_fail", "failed_url", "no_location", "row", "X")
run_info <- NULL
for(i in 0:29){
  file1 = paste0("runs_big_", i, ".csv")
  df1 = fread(file1)
  df1 = df1[ , -which(names(df1) %in% names_to_delete)]
  run_info = rbindlist(run_info, df1)   
}
#run data is more clean back up
run_data = run_info

#and we'll add info about weather
setwd("D:/data/running/weather_data/dir_weather/dir_weather")
weather <- NULL
for(i in 0:36){
  file1 = paste0("weather_", i, ".csv")
  df1 = fread(file1)
  weather = rbindlist(weather, df1[ , c("run", "temperature", "humidity", "wind_speed")])   
}

#save weather data as clean weather info
weather_data = weather

#now we'll bind them together
#full = join(x=run_info, y = mydata, by="endo", type="left", match="first")
#full = join(x=full, y = weather, by="run", type="left", match="first")

full = merge(x = run_info, y = mydata, by="endo", all.x = TRUE)
full = merge(x=full, y = weather, by="run", all.x=TRUE)

full$hour_start_per_run = get_scalar_time_noarray(name = 'local_start_time.x', to_return = 2, mydata=full)